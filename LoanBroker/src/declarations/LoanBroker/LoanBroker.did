type LoanProvider = 
 service {
   addRequest: (LoanOfferRequest) -> () oneway;
   getName: () -> (opt text) query;
 };
type LoanOfferRequest = 
 record {
   amount: float64;
   applicationid: nat;
   created: int;
   rating: nat16;
   term: nat16;
   zipcode: text;
 };
type LoanOffer = 
 record {
   applicationid: nat;
   apr: float64;
   created: int;
   providerid: principal;
   providername: text;
 };
type LoanApplication = 
 record {
   amount: float64;
   created: int;
   firstname: text;
   id: nat;
   lastname: text;
   ssn: text;
   term: nat16;
   zipcode: text;
 };
type CreditRequest = 
 record {
   created: int;
   firstname: text;
   lastname: text;
   ssn: text;
   userid: principal;
   zipcode: text;
 };
type CreditCheck = 
 service {
   addRequest: (CreditRequest) -> () oneway;
   getName: () -> (opt text) query;
 };
type Credit = 
 record {
   created: int;
   rating: nat16;
   userid: principal;
 };
service : {
  addOffer: (principal, LoanOffer) -> () oneway;
  addProvider: (LoanProvider) -> () oneway;
  apply: (LoanApplication) -> (nat);
  getApplications: () -> (vec LoanApplication) query;
  getOffers: () -> (vec LoanOffer) query;
  setCredit: (principal, Credit) -> () oneway;
  setCreditCheck: (CreditCheck) -> () oneway;
}
